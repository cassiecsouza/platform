pipeline:
  name: Platform Demo
  identifier: Platform_Demo
  allowStageExecutions: false
  properties:
    ci:
      codebase:
        connectorRef: <+input>
        repoName: <+input>
        build: <+input>
  stages:
    - stage:
        name: Build Test and Push
        identifier: Test_Build_and_Push
        type: CI
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: Run
                  name: Build Java App
                  identifier: Build_Java_App
                  spec:
                    connectorRef: <+input>
                    image: <+input>
                    shell: Sh
                    command: <+input>
                  failureStrategies: []
                  strategy:
                    matrix:
                      service:
                        - nginx
                        - nginx1
                      env:
                        - dev
                        - prod
                      exclude:
                        - service: nginx1
                          env: prod
                        - service: nginx
                          env: dev
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Build and Push to Dockerhub
                  identifier: Build_and_Push_to_Dockerhub
                  spec:
                    connectorRef: account.harnessImage
                    repo: cassiesouza/sandbox
                    tags:
                      - <+pipeline.stages.Test_Build_and_Push.variables.tag>
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: gcpkube
              namespace: build
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          sharedPaths:
            - /var/run
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: Ignore
        variables:
          - name: tag
            type: String
            description: ""
            value: 1.<+pipeline.sequenceId>
    - stage:
        name: Deploy to Dev
        identifier: Deploy
        description: ""
        type: Deployment
        spec:
          infrastructure:
            environmentRef: dev
            infrastructureDefinition:
              type: KubernetesDirect
              spec:
                connectorRef: <+input>
                namespace: e2e-dev
                releaseName: release-<+INFRA_KEY>
            allowSimultaneousDeployments: true
          execution:
            steps:
              - step:
                  type: JiraCreate
                  name: Open Jira Ticket
                  identifier: Open_Jira_Ticket
                  spec:
                    connectorRef: <+input>
                    projectKey: <+input>
                    issueType: <+input>
                    fields:
                      - name: Summary
                        value: Ticket to Track Deployment
                  timeout: 1d
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                  when:
                    stageStatus: Success
                  failureStrategies: []
              - step:
                  type: JiraUpdate
                  name: Update Jira
                  identifier: Update_JIRA
                  spec:
                    connectorRef: <+input>
                    issueKey: <+pipeline.stages.Deploy.spec.execution.steps.Open_Jira_Ticket.issue.key>
                    transitionTo:
                      transitionName: ""
                      status: <+input>
                    fields:
                      - name: Comment
                        value: Successfully Passed "Deployment to Dev"
                  timeout: 1d
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec: {}
          serviceDependencies: []
          serviceConfig:
            serviceRef: jhttp
            serviceDefinition:
              type: Kubernetes
              spec:
                variables: []
                artifacts:
                  primary:
                    spec:
                      connectorRef: account.harnessImage
                      imagePath: cassiesouza/sandbox
                      tag: <+pipeline.stages.Test_Build_and_Push.variables.tag>
                    type: DockerRegistry
                manifests:
                  - manifest:
                      identifier: demo-chart
                      type: HelmChart
                      spec:
                        store:
                          type: Github
                          spec:
                            connectorRef: account.github
                            gitFetchType: Branch
                            folderPath: test
                            repoName: platform
                            branch: main
                        valuesPaths: []
                        skipResourceVersioning: false
                        helmVersion: V3
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
        variables: []
        when:
          pipelineStatus: Success
    - stage:
        name: Deploy to QA
        identifier: Deploy_to_QA
        description: ""
        type: Deployment
        spec:
          execution:
            steps:
              - step:
                  type: JiraUpdate
                  name: Update Jira
                  identifier: Update_JIRA
                  spec:
                    connectorRef: <+input>
                    issueKey: <+pipeline.stages.Deploy.spec.execution.steps.Open_Jira_Ticket.issue.key>
                    transitionTo:
                      transitionName: ""
                      status: <+input>
                    fields:
                      - name: Comment
                        value: "\"Deploy to QA\" started"
                  timeout: 1d
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                  when:
                    stageStatus: Success
                  failureStrategies: []
              - step:
                  type: JiraUpdate
                  name: Update Jira
                  identifier: Update_Jira
                  spec:
                    connectorRef: <+input>
                    issueKey: <+pipeline.stages.Deploy.spec.execution.steps.Open_Jira_Ticket.issue.key>
                    transitionTo:
                      transitionName: ""
                      status: <+input>
                    fields:
                      - name: Comment
                        value: QA Tests Successfully Passed
                  timeout: 1d
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec: {}
          serviceDependencies: []
          serviceConfig:
            useFromStage:
              stage: Deploy
          infrastructure:
            environmentRef: qa
            infrastructureDefinition:
              type: KubernetesDirect
              spec:
                connectorRef: <+input>
                namespace: e2e-qa
                releaseName: release-<+INFRA_KEY>
            allowSimultaneousDeployments: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
        when:
          pipelineStatus: Success
        variables: []
    - stage:
        name: Jira Approval
        identifier: Approval
        description: ""
        type: Approval
        spec:
          execution:
            steps:
              - step:
                  name: Jira Approval
                  identifier: jiraApproval
                  type: JiraApproval
                  timeout: 4h
                  spec:
                    approvalCriteria:
                      type: KeyValues
                      spec:
                        matchAnyCondition: true
                        conditions:
                          - key: Status
                            operator: equals
                            value: Approved
                    rejectionCriteria:
                      type: KeyValues
                      spec:
                        matchAnyCondition: true
                        conditions: []
                    connectorRef: <+input>
                    issueKey: <+pipeline.stages.Deploy.spec.execution.steps.Open_Jira_Ticket.issue.key>
                  failureStrategies:
                    - onFailure:
                        errors:
                          - Timeout
                        action:
                          type: Ignore
          serviceDependencies: []
        tags: {}
    - stage:
        name: "Deploy to Prod "
        identifier: Deploy_to_Prod
        description: ""
        type: Deployment
        spec:
          execution:
            steps:
              - step:
                  type: JiraUpdate
                  name: Update Jira
                  identifier: Update_JIRA
                  spec:
                    connectorRef: <+input>
                    issueKey: <+pipeline.stages.Deploy.spec.execution.steps.Open_Jira_Ticket.issue.key>
                    transitionTo:
                      transitionName: ""
                      status: <+input>
                    fields:
                      - name: Comment
                        value: "\"Deploy to Prod\" started"
                  timeout: 1d
              - stepGroup:
                  name: Primary Deployment
                  identifier: primaryDepoyment
                  steps:
                    - step:
                        name: Rolling Deployment
                        identifier: rollingDeployment
                        type: K8sRollingDeploy
                        timeout: 10m
                        spec:
                          skipDryRun: false
                        failureStrategies:
                          - onFailure:
                              errors:
                                - AllErrors
                              action:
                                type: MarkAsSuccess
                  rollbackSteps:
                    - step:
                        name: Rolling Rollback
                        identifier: rollingRollback
                        type: K8sRollingRollback
                        timeout: 10m
                        spec: {}
            rollbackSteps:
              - step:
                  type: K8sRollingRollback
                  name: Rollback
                  identifier: Rollback
                  spec:
                    skipDryRun: false
                  timeout: 10m
          serviceDependencies: []
          serviceConfig:
            useFromStage:
              stage: Deploy
          infrastructure:
            environmentRef: prod
            infrastructureDefinition:
              type: KubernetesDirect
              spec:
                connectorRef: <+input>
                namespace: e2e-prod
                releaseName: release-<+INFRA_KEY>
            allowSimultaneousDeployments: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
        when:
          pipelineStatus: Success
        variables: []
  variables: []
  projectIdentifier: GitX
  orgIdentifier: default
  tags: {}
